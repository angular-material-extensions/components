!function(t,o){"object"==typeof exports&&"undefined"!=typeof module?o(exports,require("@angular/core"),require("@angular/material"),require("@angular/common"),require("@angular/flex-layout")):"function"==typeof define&&define.amd?define("@angular-material-extensions/dialogs",["exports","@angular/core","@angular/material","@angular/common","@angular/flex-layout"],o):o(((t=t||self)["angular-material-extensions"]=t["angular-material-extensions"]||{},t["angular-material-extensions"].dialogs={}),t.ng.core,t.ng.material,t.ng.common,t.ng["flex-layout"])}(this,function(t,o,a,n,e){"use strict";function i(t,o){var a="function"==typeof Symbol&&t[Symbol.iterator];if(!a)return t;var n,e,i=a.call(t),r=[];try{for(;(void 0===o||o-- >0)&&!(n=i.next()).done;)r.push(n.value)}catch(l){e={error:l}}finally{try{n&&!n.done&&(a=i["return"])&&a.call(i)}finally{if(e)throw e.error}}return r}function r(){for(var t=[],o=0;o<arguments.length;o++)t=t.concat(i(arguments[o]));return t}var l=function(){function t(t,o){this.dialogRef=t,this.data=o}return t.prototype.ngOnInit=function(){this.data&&(this.title=this.data.title?this.data.title:"Alert",this.icon=this.data.icon?this.data.icon:"warning",this.type=this.data.type?this.data.type:"warn",this.message=this.data.message?this.data.message:"Cancel",this.okTextButton=this.data.okTextButton?this.data.okTextButton:"Ok")},t.decorators=[{type:o.Component,args:[{selector:"mat-alert-dialog",template:'<mat-dialog-content fxLayout="column" fxLayoutAlign="center center">\n  <mat-icon [color]="type">{{icon}}</mat-icon>\n  <div class="title">\n    {{title}}\n  </div>\n  <div class="subtitle">\n    <p>{{message}}</p>\n  </div>\n</mat-dialog-content>\n\n<mat-dialog-actions fxLayoutAlign="center center">\n  <button mat-raised-button\n          matDialogClose\n          [color]="type">\n    {{okTextButton}}\n  </button>\n</mat-dialog-actions>\n',styles:[".material-icons{font-size:4rem}.mat-icon{height:4rem;width:4rem}.title{font-size:20px;margin-top:16px}.subtitle{margin:16px auto;max-width:300px;color:rgba(0,0,0,.54);font-size:15px;text-align:center}.subtitle p{display:block;-webkit-margin-before:1em;-webkit-margin-after:1em;-webkit-margin-start:0;-webkit-margin-end:0}"]}]}],t.ctorParameters=function(){return[{type:a.MatDialogRef},{type:undefined,decorators:[{type:o.Optional},{type:o.Inject,args:[a.MAT_DIALOG_DATA]}]}]},t}(),s=function(){function t(t,o){this.dialogRef=t,this.data=o}return t.prototype.ngOnInit=function(){this.data&&(this.title=this.data.title?this.data.title:"Loading...",this.icon=this.data.icon?this.data.icon:"",this.color=this.data.color?this.data.color:"primary")},t.decorators=[{type:o.Component,args:[{selector:"mat-async-dialog",template:'<mat-dialog-content fxLayout="column">\n  <div class="title">\n    {{title}}\n  </div>\n  <div fxFlex fxLayout="row" fxLayoutAlign="center center">\n    <mat-spinner [color]="color"></mat-spinner>\n  </div>\n</mat-dialog-content>\n\n',styles:[".title{font-size:20px;margin-top:16px;margin-bottom:16px}"]}]}],t.ctorParameters=function(){return[{type:a.MatDialogRef},{type:undefined,decorators:[{type:o.Optional},{type:o.Inject,args:[a.MAT_DIALOG_DATA]}]}]},t}(),c=function(){function t(t,o){this.dialogRef=t,this.data=o}return t.prototype.ngOnInit=function(){this.data&&(this.title=this.data.title?this.data.title:"Confirm",this.confirmMessage=this.data.confirmMessage?this.data.confirmMessage:"Are you sure ?",this.confirmTextButton=this.data.confirmTextButton?this.data.confirmTextButton:"Confirm",this.cancelTextButton=this.data.cancelTextButton?this.data.cancelTextButton:"Cancel")},t.decorators=[{type:o.Component,args:[{selector:"mat-confirm-dialog",template:'<h1 matDialogTitle>{{title}}</h1>\n<div mat-dialog-content>{{confirmMessage}}</div>\n<div mat-dialog-actions class="pt-24">\n  <button mat-raised-button class="mat-accent mr-16" (click)="dialogRef.close(true)">{{confirmTextButton}}</button>\n  <button mat-button (click)="dialogRef.close(false)">{{cancelTextButton}}</button>\n</div>\n',styles:[""]}]}],t.ctorParameters=function(){return[{type:a.MatDialogRef},{type:undefined,decorators:[{type:o.Inject,args:[a.MAT_DIALOG_DATA]}]}]},t}(),d=function(){function t(t,o){this.dialogRef=t,this.data=o}return t.prototype.ngOnInit=function(){this.data&&(this.title=this.data.title?this.data.title:"Enter the data",this.icon=this.data.icon?this.data.icon:"edit",this.color=this.data.color?this.data.color:"primary",this.placeholder=this.data.placeholder?this.data.placeholder:"",this.textButton=this.data.textButton?this.data.textButton:"Ok")},t.decorators=[{type:o.Component,args:[{selector:"mat-input-dialog",template:'<mat-dialog-content fxLayout="column">\n  <div class="title">\n    {{title}}\n  </div>\n  <div fxFlex fxLayout="row" fxLayoutAlign="center center">\n    <mat-form-field class="example-full-width">\n      <input matInput #input [placeholder]="placeholder">\n      <mat-icon matSuffix [color]="color">{{icon}}</mat-icon>\n    </mat-form-field>\n  </div>\n</mat-dialog-content>\n\n<mat-dialog-actions fxLayoutAlign="center center">\n  <button mat-raised-button\n          (click)="dialogRef.close(input.value)"\n          [color]="color">\n    {{textButton}}\n  </button>\n</mat-dialog-actions>\n',styles:[".title{font-size:20px;margin-top:16px;margin-bottom:16px}"]}]}],t.ctorParameters=function(){return[{type:a.MatDialogRef},{type:undefined,decorators:[{type:o.Optional},{type:o.Inject,args:[a.MAT_DIALOG_DATA]}]}]},t}(),u=function(){function t(t,o){this.dialogRef=t,this.data=o}return t.prototype.ngOnInit=function(){this.data&&(this.title=this.data.title?this.data.title:"Loading...",this.icon=this.data.icon?this.data.icon:"",this.color=this.data.color?this.data.color:"primary")},t.decorators=[{type:o.Component,args:[{selector:"mat-loading-dialog",template:'<mat-dialog-content fxLayout="column">\n  <div class="title">\n    {{title}}\n  </div>\n  <div fxFlex fxLayout="row" fxLayoutAlign="center center">\n    <mat-spinner [color]="color"></mat-spinner>\n  </div>\n</mat-dialog-content>\n\n',styles:[".title{font-size:20px;margin-top:16px;margin-bottom:16px}"]}]}],t.ctorParameters=function(){return[{type:a.MatDialogRef},{type:undefined,decorators:[{type:o.Optional},{type:o.Inject,args:[a.MAT_DIALOG_DATA]}]}]},t}(),p=function(){function t(t,o){this.dialogRef=t,this.data=o}return t.prototype.ngOnInit=function(){this.data&&(this.title=this.data.title?this.data.title:"Options",this.icon=this.data.icon?this.data.icon:"",this.color=this.data.color?this.data.color:"primary",this.textButton=this.data.textButton?this.data.textButton:"OK",this.options=this.data.options?this.data.options:null)},t.decorators=[{type:o.Component,args:[{selector:"mat-radio-dialog",template:'<mat-dialog-content fxLayout="column">\n  <div class="title">\n    {{title}}\n  </div>\n  <div fxFlex fxLayout="row" fxLayoutAlign="center center">\n    <mat-radio-group #radioGroup>\n      <mat-radio-button *ngFor="let option of options" name="more_options"\n                        [value]="option.value">\n        {{option.viewValue ? option.viewValue : option.value}}\n      </mat-radio-button>\n    </mat-radio-group>\n  </div>\n</mat-dialog-content>\n<mat-dialog-actions fxLayoutAlign="center center">\n  <button mat-raised-button\n          (click)="dialogRef.close(radioGroup.selected.value)"\n          [color]="color">\n    {{textButton}}\n  </button>\n</mat-dialog-actions>\n',styles:[".title{font-size:20px;margin-top:16px;margin-bottom:16px}mat-radio-group{display:flex;flex-direction:column;margin:15px 0}mat-radio-button{margin:5px}"]}]}],t.ctorParameters=function(){return[{type:a.MatDialogRef},{type:undefined,decorators:[{type:o.Optional},{type:o.Inject,args:[a.MAT_DIALOG_DATA]}]}]},t}(),m=function(){function t(t,o){this.dialogRef=t,this.data=o}return t.prototype.ngOnInit=function(){this.data&&(this.title=this.data.title?this.data.title:"Options",this.icon=this.data.icon?this.data.icon:"",this.color=this.data.color?this.data.color:"primary",this.textButton=this.data.textButton?this.data.textButton:"OK",this.options=this.data.options?this.data.options:null)},t.decorators=[{type:o.Component,args:[{selector:"mat-select-dialog",template:'<mat-dialog-content fxLayout="column">\n  <div class="title">\n    {{title}}\n  </div>\n  <div fxFlex fxLayout="row" fxLayoutAlign="center center">\n    <mat-form-field>\n      <mat-label>options</mat-label>\n      <mat-select #select>\n        <mat-option *ngFor="let option of options" [value]="option.value">\n          {{option.viewValue ? option.viewValue : option.value}}\n        </mat-option>\n      </mat-select>\n    </mat-form-field>\n  </div>\n</mat-dialog-content>\n\n<mat-dialog-actions fxLayoutAlign="center center">\n  <button mat-raised-button\n          [color]="color">\n    {{textButton}}\n  </button>\n</mat-dialog-actions>\n\n',styles:[".title{font-size:20px;margin-top:16px;margin-bottom:16px}"]}]}],t.ctorParameters=function(){return[{type:a.MatDialogRef},{type:undefined,decorators:[{type:o.Optional},{type:o.Inject,args:[a.MAT_DIALOG_DATA]}]}]},t}(),g=function(){function t(t,o){this.dialogRef=t,this.data=o}return t.prototype.ngOnInit=function(){this.data&&(this.title=this.data.title?this.data.title:"Loading...",this.icon=this.data.icon?this.data.icon:"",this.color=this.data.color?this.data.color:"primary")},t.decorators=[{type:o.Component,args:[{selector:"mat-timer-dialog",template:"<p>\n  mat-timer-dialog works!\n</p>\n",styles:[""]}]}],t.ctorParameters=function(){return[{type:a.MatDialogRef},{type:undefined,decorators:[{type:o.Optional},{type:o.Inject,args:[a.MAT_DIALOG_DATA]}]}]},t}(),f=[l,s,c,d,u,p,m,g],h=function(){function t(){}return t.decorators=[{type:o.NgModule,args:[{imports:[n.CommonModule,e.FlexLayoutModule,a.MatDialogModule,a.MatButtonModule,a.MatIconModule,a.MatInputModule,a.MatProgressSpinnerModule,a.MatRadioModule,a.MatSelectModule],exports:r(f,[a.MatDialogModule,e.FlexLayoutModule]),entryComponents:r(f),declarations:r(f)}]}],t}();t.MatAlertDialog=l,t.MatAsyncDialog=s,t.MatConfirmDialog=c,t.MatDialogsModule=h,t.MatInputDialog=d,t.MatLoadingDialog=u,t.MatRadioDialog=p,t.MatSelectDialog=m,t.MatTimerDialog=g,t.dialogs=f,Object.defineProperty(t,"__esModule",{value:!0})});
//# sourceMappingURL=angular-material-extensions-dialogs.umd.min.js.map