version: 2

job_defaults: &job_defaults
  docker:
    - image: circleci/node:10-browsers
      environment:
        CHROME_BIN: '/usr/bin/google-chrome'
  working_directory: ~/project/repo

#app
cache_key: &cache_key components-deps-cache-{{ .Branch }}-{{ checksum "package-lock.json" }}
dist_key: &dist_key components-dist-{{ .Revision }}

#dialogs dist package
cache_dialogs_key: &cache_dialogs_key dialogs-deps-cache-{{ .Branch }}-{{ checksum "package-lock.json" }}
dist_dialogs_key: &dist_dialogs_key dialogss-dist-{{ .Revision }}

#components dist package
cache_components_key: &cache_components_key components-deps-cache-{{ .Branch }}-{{ checksum "package-lock.json" }}
dist_components_key: &dist_components_key componentss-dist-{{ .Revision }}

jobs:
  install:
    <<: *job_defaults
    steps:
      - checkout
      - restore_cache:
          key: *cache_key
      - run:
          name: install-dependencies
          command: npm ci
      - run:
          name: Install Semantic Release globally
          command: sudo npm i -g semantic-release@15
      - run:
          name: Install resync command
          command: sudo apt install rsync
      - save_cache:
          key: *cache_key
          paths:
            - node_modules

  lint:
    <<: *job_defaults
    steps:
      - checkout
      - restore_cache:
          key: *cache_key
      - run:
          name: lint
          command: npm run lint

  test-app:
    <<: *job_defaults
    steps:
      - checkout
      - restore_cache:
          key: *cache_key
      - restore_cache:
          key: *dist_key
      - run:
          name: test
          command: npm run test

  build-libraries:
    <<: *job_defaults
    steps:
      - checkout
      - restore_cache:
          key: *cache_key
      - run:
          name: Install resync command
          command: sudo apt install rsync
      - run:
          name: build @angular-material-extensions/dialogs library
          command: npm run build:dialogs
      - run:
          name: build @angular-material-extensions/components library
          command: cd projects/angular-material-extensions/components && npm run build
      - save_cache:
          key: *dist_dialogs_key
          paths:
            - dist/angular-material-extensions/dialogs
      - save_cache:
          key: *dist_components_key
          paths:
            - dist/angular-material-extensions/components

  build-prerender-app:
    <<: *job_defaults
    steps:
      - checkout
      - restore_cache:
          key: *cache_key
      - restore_cache:
          key: *dist_dialogs_key
      - restore_cache:
          key: *dist_components_key
      - run:
          name: build-prerender
          command: sudo npm run build:prerender
      - save_cache:
          key: *dist_key
          paths:
            - dist

  release-app:
    <<: *job_defaults
    steps:
      - checkout
      - restore_cache:
          key: *cache_key
      - restore_cache:
          key: *dist_key
      - run:
          name: release-app
          command: npm run semantic-release || true

  release-dialogs-lib:
    <<: *job_defaults
    steps:
      - checkout
      - restore_cache:
          key: *cache_key
      - restore_cache:
          key: *dist_dialogs_key
      - run:
          name: release-dialogs-lib
          command: cd projects/angular-material-extensions/dialogs && npm run semantic-release || true

  release-pages-lib:
    <<: *job_defaults
    steps:
      - checkout
      - restore_cache:
          key: *cache_key
      - restore_cache:
          key: *dist_components_key
      - run:
          name: release-pages-lib
          command: cd projects/angular-material-extensions/pages && npx semantic-release || true

  deploy-app-dev:
    <<: *job_defaults
    steps:
      - checkout
      - restore_cache:
          key: *cache_key
      - restore_cache:
          key: *dist_key
      - run:
          name: deploy-app-dev
          command: npx firebase deploy --token=$FIREBASE_TOKEN

  deploy-app-prod:
    <<: *job_defaults
    steps:
      - checkout
      - restore_cache:
          key: *cache_key
      - restore_cache:
          key: *dist_key
      - run:
          name: deploy-app-prod
          command: npx firebase deploy --token=$FIREBASE_TOKEN

workflows:
  version: 2
  build-test-release:
    jobs:
      - install
      #      - lint:
      #          requires:
      #            - install
      #      - test-app:
      #          requires:
      #            - install
      - build-libraries:
          requires:
            - install
      - build-prerender-app:
          requires:
            - build-libraries
      #            - test-app
      - release-dialogs-lib:
          requires:
            - build-libraries
          filters:
            branches:
              only: dialogs
      - release-pages-lib:
          requires:
            - build-libraries
          filters:
            branches:
              only: pages
      - release-app:
          requires:
            - build-prerender-app
          filters:
            branches:
              only: master
      - deploy-app-prod:
          requires:
            - release-app
          filters:
            branches:
              only: master
#      - deploy-app-dev:
#          requires:
#            - build-prerender-app
#          filters:
#            branches:
#              only: dev
